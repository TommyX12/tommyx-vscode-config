// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "tab",
        "command": "selectNextQuickFix",
        "when": "editorFocus && quickFixWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevQuickFix",
        "when": "editorFocus && quickFixWidgetVisible"
    },
    {
        "key": "enter",
        "command": "-acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "tab",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "cmd+k",
        "command": "extension.vim_ctrl+u",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+j",
        "command": "extension.vim_ctrl+d",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "cmd+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+cmd+j",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+k",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.output.toggleOutput",
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus && vim.mode != 'Insert'"
    },
    {
        "key": "cmd+shift+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd '${fileDirname}'\u000D"
        }
    },
    {
        "key": "ctrl+cmd+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd '${workspaceFolder}'\u000D"
        }
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.acceptSelectedQuickOpenItem",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+cmd+k",
        "command": "extension.vim_ctrl+home",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+cmd+j",
        "command": "extension.vim_ctrl+end",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "cmd+l",
        "command": "editor.action.insertSnippet",
        "when": "textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "alt+k",
        "command": "extension.vim_ctrl+u",
        "when": "textInputFocus"
    },
    {
        "key": "alt+j",
        "command": "extension.vim_ctrl+d",
        "when": "textInputFocus"
    },
    {
        "key": "alt+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "alt+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "alt+;",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.output.toggleOutput",
    },
    {
        "key": "alt+i",
        "command": "workbench.action.focusActiveEditorGroup",
    },
    {
        "key": "alt+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus && vim.mode != 'Insert'"
    },
    {
        "key": "alt+shift+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd '${fileDirname}'\u000D"
        }
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd '${workspaceFolder}'\u000D"
        }
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.acceptSelectedQuickOpenItem",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+alt+k",
        "command": "extension.vim_ctrl+home",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+alt+j",
        "command": "extension.vim_ctrl+end",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+alt+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "editor.action.insertSnippet",
        "when": "textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly && vim.mode == 'Insert'"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "tab",
        "command": "-markdown.extension.onTabKey",
        "when": "editorTextFocus && markdown.extension.editor.cursor.inList && !editorHasMultipleSelections && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !inlineSuggestionVisible && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "shift+tab",
        "command": "-markdown.extension.onShiftTabKey",
        "when": "editorTextFocus && markdown.extension.editor.cursor.inList && !editorHasMultipleSelections && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "enter",
        "command": "-python.execInREPLEnter",
        "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execInREPL",
        "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
    },
]